# This file contains facts/rules for the demo program ParseDemo.java.
# Klivo - 2020/06
#
# check_pron_verb
# Check the agreement between a pronoun subject and verb. For example,
# 'He is' is OK, because both 'He' and 'is' are third person singular,
# but 'He are' is wrong.
# The arguments are:
#   original pronoun
#   person (first, second, third)
#   plurality (singular, plural)
#   original verb
#   verb form (base, past, third_sing)
#
check_pron_verb($_, first, singular, $_, base) :- !.  # OK
check_pron_verb($_, first, singular, $_, past) :- !.  # OK
check_pron_verb($_, second, singular, $_, base) :- !.  # OK
check_pron_verb($_, second, singular, $_, past) :- !.  # OK
check_pron_verb($_, third, singular, $_, third_sing) :- !.  # OK
check_pron_verb($_, third, singular, $_, past) :- !.  # OK

check_pron_verb($_, first, plural, $_, base) :- !.  # OK
check_pron_verb($_, first, plural, $_, past) :- !.  # OK
check_pron_verb($_, second, plural, $_, base) :- !.  # OK
check_pron_verb($_, second, plural, $_, past) :- !.  # OK
check_pron_verb($_, third, plural, $_, base) :- !.  # OK
check_pron_verb($_, third, plural, $_, past) :- !.  # OK
# Else
check_pron_verb($Pr, $_, $_, $V, $_) :- print(%s and %s do not match.), nl.

# show - To display the contents of a list.
show($In) :- $In = [$H | $T], print(%s,$H), nl, show($T).
show([]) :- print(------------), nl.

# Rule to remove punctuation.
remove_punc([$H | $T], $T2) :- functor($H) = punctuation, !, remove_punc($T, $T2).
remove_punc([$H | $T], [$H | $T2]) :- remove_punc($T, $T2).
remove_punc([], []).

sentence([pronoun($PS, subject, $Person, $Plur), verb($V, $_, $VerbForm)], [$PS, $V]) :- check_pron_verb($PS, $Person, $Plur, $V, $VerbForm).

sentence([pronoun($PS, subject, $Person, $Plur), verb($V, $_, $VerbForm), pronoun($PO, object, $_, $_)], [$PS, $V, $PO]) :- check_pron_verb($PS, $Person, $Plur, $V, $VerbForm).

parse($In, $Out) :- words_to_pos($In, $In2), [$H | $_] = $In2, remove_punc($In2, $In3), sentence($In3, $Out).
