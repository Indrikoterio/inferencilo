/**
 * BuiltIn5
 *
 * This class is used to test Built In Predicate functionality.
 * BuiltIn5 has 5 arguments:
 *
 *    word list in
 *    new head word out
 *    new tail out
 *    error list in
 *    error list out
 *
 * This class is useful in recursive rules. See comments in
 * BIPSolutionNodeIHTIO source.
 *
 * @author  Cleve (Klivo) Lendon
 * @version 1.0
 */

import java.util.*;
import inferencilo.*;

public class BuiltIn5 extends BuiltInPredicateIHTIO {

   /**
    * constructor
    *
    * @param  unifiable parameters
    */
   public BuiltIn5(Unifiable... args) {
      super("BuiltIn5", args);
   }


   /*
    * clearAll - indicate failure
    */
   private void clearAll() {
      newHead = null;
      newTail = null;
   }

   /**
    * evaluate
    *
    * The unique work of the built-in predicate is done by this method.
    * Results are saved in newHead, newTail, and newErrorList.
    *
    * @param   substitution set of parent
    * @return  unifiable term or null
    */
   public Unifiable evaluate(SubstitutionSet ss) {

      clearAll();

      PList inList = castPList(arguments[0], ss);
      if (inList == null) return null;

      PList inErrors = castPList(arguments[3], ss);
      if (inErrors == null) return null;

      Constant err = new Constant("an error");
      newErrorList = new PList(false, err, inErrors);  // Add an error.

      Unifiable[] terms = inList.flatten(2);  // Get two terms
      if (terms == null) return null;

      String str = "" + terms[0] + "-" + terms[1];
      newHead = new Constant(str);
      newTail = terms[2];
      return newHead;
   }

   /**
    * getHead
    *
    * Get head term generated by evaluate().
    *
    * @return head term
    */
   Unifiable newHead = null;
   public Unifiable getHead() { return newHead; }

   /**
    * getTail
    *
    * Get tail term generated by evaluate().
    *
    * @return tail term
    */
   Unifiable newTail = null;
   public Unifiable getTail() { return newTail; }

   /**
    * getErrors
    *
    * Return errors generated by evaluate().
    *
    * @return  new list of errors
    */
   Unifiable newErrorList = null;
   public Unifiable getErrors() { return newErrorList; }

} // BuiltIn5
